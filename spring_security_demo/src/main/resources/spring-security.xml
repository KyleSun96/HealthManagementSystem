<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">

    <!--
        http：用于定义相关权限控制
        指定哪些资源不需要进行权限校验，可以使用通配符
        要写在 配置拦截规则 上面
    -->
    <security:http security="none" pattern="/css/*"/>
    <security:http security="none" pattern="/js/*"/>
    <security:http security="none" pattern="/pages/login.html"/>

    <!--
		auto-config:自动配置，如果设置为true，表示自动应用一些默认配置，比如框架会提供一个默认的登录页面
		use-expressions:是否使用spring security提供的表达式来描述权限
	-->
    <security:http auto-config="true" use-expressions="true">

        <!--配置拦截规则:
            pattern:描述拦截规则,/** 表示拦截所有请求
            access:指定所需的访问角色或者访问权限
		-->
        <!--只要认证通过(登录)就可以访问-->
        <security:intercept-url pattern="/index.html" access="isAuthenticated()"/>
        <security:intercept-url pattern="/pages/a.html" access="isAuthenticated()"/>

        <!--拥有add权限就可以访问b.html页面-->
        <security:intercept-url pattern="/pages/b.html" access="hasAuthority('add')"/>

        <!--拥有ROLE_ADMIN角色就可以访问c.html页面-->
        <security:intercept-url pattern="/pages/c.html" access="hasRole('ROLE_ADMIN')"/>

        <!--拥有ROLE_ADMIN角色就可以访问d.html页面，注意：此处虽然写的是ADMIN角色，框架会自动加上前缀ROLE_-->
        <security:intercept-url pattern="/pages/d.html" access="hasRole('ADMIN')"/>

        <!--form‐login：定义表单登录信息-->
        <security:form-login
                login-page="/pages/login.html"
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/login.do"
                default-target-url="/index.html"
                authentication-failure-url="/pages/login.html"/>

        <!--
            logout：退出登录
            logout-url：退出登录操作对应的请求路径
            logout-success-url：退出登录后的跳转页面
        -->
        <security:logout logout-url="/logout.do"
                         logout-success-url="/pages/login.html" invalidate-session="true"/>

        <!--
            csrf：对应CsrfFilter过滤器
            disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，
            否则登录操作会被禁用（403）
        -->
        <security:csrf disabled="true"/>
    </security:http>

    <!--配置认证管理器: 提供用户认证信息-->
    <security:authentication-manager>
        <!--配置认证提供者-->
        <security:authentication-provider user-service-ref="userService2">
            <!--指定: 对密码进行加密的对象-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--注册userService,交给spring管理 : 明文密码-->
    <bean id="userService" class="com.itheima.service.SpringSecurityUserService"/>

    <!--注册userService,交给spring管理 : 加盐加密密码-->
    <bean id="userService2" class="com.itheima.service.SpringSecurityUserService2"/>

    <!--配置密码加密对象-->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启spring注解使用-->
    <context:annotation-config/>

    <!--配置组件扫描，用于扫描Controller-->
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.itheima.controller"/>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>


</beans>